/*************************************************************************
 *
 * VLOCITY, INC. CONFIDENTIAL
 * __________________
 *
 *  [2014] - [2020] Vlocity, Inc.
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Vlocity, Inc. and its suppliers,
 * if any. The intellectual and technical concepts contained
 * herein are proprietary to Vlocity, Inc. and its suppliers and may be
 * covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this
 * information and reproduction, modification or reverse-engineering
 * of this material, is prohibited unless prior written permission
 * is obtained from Vlocity, Inc.
 *
 * Build: v234.0.0
 */
import { createElement } from "lwc";
import accordionSection from "c/accordionSection";

describe("c-accordion", () => {
  it("renders DOM elements", () => {
    const element = createElement("c-accordion-section", {
      is: accordionSection
    });
    document.body.appendChild(element);
    expect(element.shadowRoot.children).not.toHaveLength(0);
  });

  it("check name gets set", () => {
    const element = createElement("c-accordion-section", {
      is: accordionSection
    });
    element.name = "Accordion1";
    document.body.appendChild(element);

    const buttonEle = element.shadowRoot.querySelectorAll(
      "section > div > h3 > button"
    )[0];
    const hasAriaControls = buttonEle
      .getAttribute("aria-controls")
      .includes("Accordion1");
    expect(hasAriaControls).toBe(true);
  });

  test("Label is set for section", () => {
    const element = createElement("c-accordion-section", {
      is: accordionSection
    });
    element.name = "Accordion1";
    element.label = "Demo Accordion";
    document.body.appendChild(element);

    const spanEle = element.shadowRoot.querySelectorAll(
      "section > div > h3 > button > span"
    )[0];
    expect(spanEle.textContent).toBe("Demo Accordion");
  });

  test("Title is set for section", () => {
    const element = createElement("c-accordion-section", {
      is: accordionSection
    });
    element.name = "Accordion1";
    element.title = "Test";
    element.label = "Demo Accordion";
    document.body.appendChild(element);

    const spanEle = element.shadowRoot.querySelectorAll(
      "section > div > h3 > button > span"
    )[0];
    expect(spanEle.getAttribute("title")).toBe("Test");
  });

  test("Section is open", () => {
    const element = createElement("c-accordion-section", {
      is: accordionSection
    });
    element.name = "Accordion1";
    element.title = "Test";
    element.label = "Demo Accordion";
    element.isSectionOpen = true;
    document.body.appendChild(element);

    const buttonEle = element.shadowRoot.querySelectorAll(
      "section > div > h3 > button"
    )[0];
    expect(buttonEle.getAttribute("aria-expanded")).toBe("true");
  });

  test("Icon is displayed", () => {
    const element = createElement("c-accordion-section", {
      is: accordionSection
    });
    element.name = "Accordion1";
    element.title = "Test";
    element.label = "Demo Accordion";
    element.isSectionOpen = true;
    document.body.appendChild(element);

    return Promise.resolve().then(() => {
      const iconEle = element.shadowRoot.querySelectorAll(
        "section > div > h3 > button > c-icon"
      )[0];
      expect(iconEle.iconName).toBe("utility:chevrondown");
    });
  });

  test("Toggle event is fired", () => {
    const element = createElement("c-accordion-section", {
      is: accordionSection
    });
    element.name = "Accordion1";
    element.title = "Test";
    element.label = "Demo Accordion";
    element.isSectionOpen = false;
    document.body.appendChild(element);

    return Promise.resolve().then(() => {
      element.addEventListener("togglesection", event => {
        expect(event.detail.name).toBe("Accordion1");
      });
      const buttonEle = element.shadowRoot.querySelectorAll(
        "section > div > h3 > button"
      )[0];
      buttonEle.click();
    });
  });
});
